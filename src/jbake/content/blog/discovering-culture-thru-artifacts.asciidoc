title=Discovering culture through artifacts
date=2018-10-17
type=post
tags=general
status=published
summary=...
masthead=egypt.jpg
mastheadCredit=https://flic.kr/p/pNB7hX
~~~~~~
When you first join a new team, most of us are anxious to prove ourselves to not only our new manager but to our peers as well. We do this by learning about, meeting, and (hopefully) exceeding the expectations of our new team. These expectations can form the foundation of your new team's culture and link:/blog/understanding-culture.html[understanding your team's culture] is a critical step to becoming an effective member of a team. A team's expectations are often unspoken, forcing you as a new team member to uncover them over time. You do this through conversations, experience, failure, success, and feedback. This is the expectation when one joins a team.

But what about a team that you are not a member of? Your company is likely comprised of numerous teams, all of which are constantly interacting with each other. Each of these teams has their culture or set of expectations for their members. It is not uncommon for members of a team to turn around and level their internal team expectations on other teams with the company. When two teams with differing cultures interact, there is a higher probability that there will be tension between the two teams. This tension is often the result of unspoken internal team expectations that each team naively believes should be universally applied. If left unaddressed, this can pose significant challenges to the effectiveness of these two team’s collaboration.

To avoid these challenges, it is extremely valuable to get good at identifying the culture of other teams, quickly. By understanding the cultural traits, values, and expectations of another team, you can begin to understand where your two teams may have conflicts. The best approach to understanding the culture of a team that is not your own would be to join that team. However, this can be unrealistic and time-consuming. Instead, begin looking for and understanding the **cultural artifacts** of that team.

A **cultural artifact** is something that a team creates, shares and/or somehow emits outside their team that can be observed. As an outsider of a team, you can use these artifacts to gain insight into the potential culture of a team you are about to collaborate with. Cultural artifacts can provide you with insight into the potential culture of a team. Similar to archaeological artifacts found within an Egyptian pyramid, cultural artifacts can provide you with clues to what a team might expect from you. Identifying cultural artifacts can be a quick way to understanding how best to work together.

So what does a cultural artifact look like and where do I go to find them? I suspect that there are dozens of cultural artifacts that be used to discover the culture of a team. For me, there are a few that I tend to lean on in particular. The cultural artifacts of a team I seek out are **managers**, **behaviors**, **tools**, and **domain**.

== Managers as cultural artifacts
The first place to look is at the manager of the team. The manager of a team, organization or company, is the one responsible for setting priorities and holding team members accountable for achieving these priorities. Managers are particularly special to the culture of a team because they have influence over the team in a number of ways. So the values and behaviors of a manager are potent indicators of the current, and future culture of a team. A manager creates the culture of a team, whether they like it or not, in the following ways:

* _**Managers are responsible for hiring.**_ Managers are responsible for deciding who will be a member of their team. If the manager is self-aware, they will try and filter out the common failure mode that managers tend to hire themselves. If a manager is not aware, they will likely create a team that looks and behaves in the same way as they do. The beliefs and biases of a team’s manager strongly influence who they hire.

* _**Managers are responsible for firing.**_ I come back to one of https://medium.com/@dunn/creating-culture-21a117803f80[my favorite quotes] from Andy Dunn, the founder of Bonobos, “The most important people to your culture are those who leave...the people you fire are more important than the people you hire.” When a manager lets somebody go, they are sending a strong signal to the rest of the team that certain behavior is not desirable on this team. This can strongly shape how the remaining team members behave. This is also one of the hardest parts of being a manager. If a team’s manager tolerates a brilliant jerk, then they are signaling to the rest of the team that being “brilliant” is more important than being a collaborative or respectful. Whether the manager knows it or not, they are creating a culture that embraces brilliant jerks.

* _**Managers are responsible for rewards.**_ Behaviors that are rewarded can be one of the potent and dangerous indicators of a team’s culture. By rewarding an individual with a promotion, you are signaling to the rest of the team the values you espouse. The rest of the team will look at this individual and see all their behavior as being rewarded, not just the positive behavior. Many of us have worked in an organization where those who were promoted were also the ones that backstabbed other leaders and worked in their own interest. An organization that promotes one of two leaders like that, creates a culture that says “we value backstabbing”.

* _**Managers are responsible for modeling behavior.**_ New members of a team will learn which behavior is accepted, expected and rewarded by observing their manager. If the manager tells everyone on the team that giving candid feedback is important, but they themselves are unable to provide feedback, then their words are merely wind. It is also likely that a manager’s behavior indicates how they hire, fire and reward members of their team. So, in observing a manager’s behavior, you can assume the team will likely act like them.

== Behavior as a cultural artifact

The manager is ultimately responsible for the composition and direction of a team, but in the end, it is the behavior of the team that we are most interested in. Managers are cultural artifacts that help you understand how the team's culture came to be, and where it's going. But the behavior of the team is an artifact of the team's current culture.

Within an organization, there are plenty of opportunities to observe the behavior of another team. You will likely attend meetings with them, you will see them going to lunch together, you will overhear their laughter from your desk, or you may even observe their conversations in a Slack channel. Each time you observe the behavior, you are collecting information about the team's culture. You can begin to understand what they value and believe.

There are behaviors that are directly applicable to the work one does in software engineering, such as unit testing or bi-weekly sprints. Observing this behavior in another team is definitely a cultural artifact, especially if your organization does not have standards. When working with a team that has strong engineering practices, you can safely assume that they will also expect you and your team to share their beliefs. You can expect them to assume that you should build software the same way they do. And if you don't, they may accept that, until you disappoint them. This is when you can expect judgment to be passed.

There are also behaviors that are indirectly related to the code team's write. How do you talk to each other? How a team shares ideas? How do they resolve conflict? How are decisions made? How well do they receive feedback? Do they treat peers outside their team with respect, or do they belittle them? Are they competitive or collaborative?

== Tools as a cultural artifact

This is often the easiest artifact to identify, but will also yield the least amount of information. I have found that the tools a team uses can be a weak indicator the potential beliefs a team. I am using the term tools to cover a wide range of things. Programming languages, version control system, a chat client, a framework, and even a whiteboard are all examples of tools that a team might employ. Each of these tools was designed to solve a problem and have a set of constraints.

Tools also have there own community exists outside of the team or host organization. For instance, the Ruby community is vibrant and global and carries with it a set of beliefs that members of the community align with. So, when a team introduces a tool or language into your organization, it is also introducing the beliefs of the community. I feel this point is often overlooked and I have observed it to be a constant source of unspoken tension between teams.

== Domain as a cultural artifact

When an organization forms a team, it does so in order to address a particular need within the organization. The need or problem this team addresses can serve as a useful cultural artifact. It is also a fairly static one, as the teams are often disbanded if their founding need no longer exists.

I have spent the last few years leading engineering teams focused on providing development infrastructure and tooling to the broader organization. These team were formed to address the organization-wide need for centralized development support. This team would need to provide domain expertise, tooling, and support to the rest of the company. I was hired to lead these teams due to my passion and expertise in this space. I in term hired engineers who were also passionate about providing this organizational need. The history, legacy and composition of the team is embroiled in the domain of the team. The tools we choose and recommend are based on the organizational need. This is a cultural artifact.

As another example of how domain can play a role in shaping an engineering team, I once made the mistake in assuming that two engineering teams that my team supported shared the same beliefs. Both were product teams, focused on the UI, and both built their product in JavaScript. I was surprised to find these two teams asking for conflicting features within a tool my team was building. So when I dug in, I realized that these two UI teams were formed to solved different needs. One team was formed to build a robust, reliant and performant experience in one portion of the product's UI. As a result, they believed in building solutions themselves from scratch, since third-party products often fell short of their performance expectations. The other team was formed to build a user experience that changed based on hundreds of A/B tests, most of which would fail and be thrown out. As a result, they valid a fast developer experience and put less emphasis on robust development practices, since a lot of their code would not persist beyond the lean of their test. Once I understood how the domain influenced their culture, I could become a much better service provider to both of these teams.

== Seek out artifacts

I firmly believe that seeking out the cultural artifacts of the teams you interact with can help you understand a team's culture, making it easier for you to work with them effectively. It is also helpful to think about the cultural artifacts that your team emits, as it is likely that you aren't the only one seeking them out.
