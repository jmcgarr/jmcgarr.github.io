title=Beyond the culture deck
date=2015-11-10
type=post
tags=culture, DevOps, Netflix, Beyond the Culture Deck
status=published
summary=...
~~~~~~

Since joining http://www.netflix.com[Netflix] in early 2014, I have been obsessed with learning all I could about our culture. I wanted to see how much Netflix's culture matched up with the famed http://www.slideshare.net/reed2001/culture-1798664[culture deck]. I wanted to see how much it differed from the enterprises and government agencies that I've worked with. But most importantly, I wanted to know how much of the culture I could take with me. Could a traditional enterprise learn anything of value from Netflix's culture?

What I would like to share is a few of my observations and learnings about Netflix culture that I will carry with me. My hope is that sharing some of these will provide inspiration to those hoping to improve their own organization.

Rather than author a verbose singular post, I've decided to break this up into multiple entries. For those of you who attended the 2015 DevOps Enterprise Summit, you may note this is an expansion on the talk I gave there.

== The deck itself

This is the obvious place to start. The Netflix culture deck is famous icon of Silicon Valley tech company cultures. Sheryl Sandberg went as far to say that http://www.gq.com/story/netflix-founder-reed-hastings-house-of-cards-arrested-development["it may well be the most important document ever to come out of the valley"]. It serves as a Constitution for Netflix employees. We will often refer back to the culture deck to ensure any planned actions aren't in violation of our culture.

"it may well be the most important document ever to come out of the valley"
-- Sheryl Sandberg

One thing that struck me was that there is no internal version of the culture deck. The publicly available version on Slideshare is the same one we use. There is no secret culture deck. Our culture is laid bare for the whole world to see. Brilliant.

A relevant question for most companies regarding to the culture deck would be, "What is your culture"? What I mean by this is, can employees in your company refer to a singular thing that provides a beacon for behavior? The mere fact that Netflix employees have something to refer to is just as significant as the content inside.

== Freedom AND Responsibility.

The most notable and prominent element of Netflix's culture is _Freedom and Responsibility_. F&R, as we often called it, is a central to Netflix's culture. It is also a significant attractor of talent, as it stands in stark contrast to most corporate cultures. Software professionals are accustomed to not being trusted and micromanaged. The idea of freedom is extremely attractive. Freedom is what people are seeking, and draws them to F&R like a siren's song.

But there are two halves to F&R. It is Freedom AND responsibility. You can't just build something and hand it off to an ops team at Netflix. If you build something, you own it and run it. So what this means is you are responsibility for the decisions you make when you exercise your freedom.

Another way to view F&R is "those who are responsible, have the freedom". For instance, the Engineering Tools team is responsible for providing tools to enable engineers at Netflix to build, bake and deploy their services to the cloud. We often refer to this suite of tools as our Paved Road (see image below). Since we are _responsible_ for the pipeline of tools from source to production, we also have the _freedom_ to choose what the Paved Road looks like.

image::/img/paved-road.png[The Paved Road,align="center"]

Does this mean that engineers at Netflix are locked into our solution only? No. If an engineer would like to use SBT instead of Gradle for instance, they can. But when an engineer decides they would like more freedom, they have to take on more responsibility. Nebula (our suite of Gradle plugins) makes it easy to create a Netflix-ready app. We cannot provide the same level of support for SBT. So anybody wanting to use SBT would have to take on the _responsibility_ of replicating that work. This also serves as an incentive for us (Engineering Tools) to provide tools that meet our customer's needs.

If you want more freedom, you have to be willing to take on more responsibility.

The lesson I will take with me here is to always ask the question "do those with the responsibility, also have the freedom"? This question may seem familiar to individuals familiar with the DevOps movement. Ops is responsible for the uptime of the servers, yet they do not typically have the freedom to determine which software is installed. Aligning freedom with responsibility provides individuals with a sense of ownership.

In my next post I will talk about Context, not control.
